@page "/addnewbooking"
@using SmartGym.Constants.Enums
@using SmartGym.Helpers
@using SmartGym.Models
@using SmartGym.Services
@inject SmartGym.Services.IBookingService bookingService
@inject SmartGym.Services.IUserService userService
@inject NavigationManager navManager

<PageTitle>Add New Booking</PageTitle>

<div>
    <div>
        <div>
            <h4 style="color:green; font-size:40px"><b>Add a New Booking</b></h4>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div>
                <label for="userid">Name: </label>
                <select @bind=UserId name="userid" id="userid">
                    <option value="" disabled>Select a member</option>
                    @foreach (UserDto userDto in userList)
                    {
                        <option value="@userDto.Id">@userDto.Name</option>
                    }
                </select>
                <hr />
            </div>
            <div>
                <label for="session">Class Session: </label>
                <select @bind=ClassId name="session" id="session">
                    <option value="" disabled>Select a class session</option>
                    @foreach (BookingDTO bookingDTO in bookingList)
                    {
                        <option value="@bookingDTO.ClassSessionId">@bookingDTO.ClassSessionId</option>
                    }
                </select>
                <hr />
            </div>
            <div>
                <label for="status">Status: </label>
                <select @bind=Status name="status" id="status">
                    <option value="" disabled>Select a status</option>
                    @foreach (BookingStatus status in Enum.GetValues(typeof(BookingStatus)))
                    {
                        <option value="@status">@EnumHelper.GetDisplayName(status)</option>
                    }
                </select>
            </div>
            <button @onclick=AddBooking class="">[Add]</button>
            <a href="/viewbookings">Cancel</a>
        </div>
    </div>
</div>

@code {
    public int UserId { get; set; }
    public int ClassId { get; set; }
    public BookingStatus Status { get; set; }
    public DateTime CreatedAt { get; set; }
    public DateTime ConfirmedAt { get; set; }
    public DateTime UpdatedAt { get; set; }
    private UserDto user { get; set; }
    private List<UserDto> userList = new();
    private List<BookingDTO> bookingList = new();
    private List<BookingPostDTO> bookingPostList = new();

    protected override async Task OnInitializedAsync()
    {
        userList = await userService.GetAllUsers();
        bookingList = await bookingService.GetAllBookings();
    }

    /// <summary>
    /// Adds a booking to the table
    /// </summary>
    /// <returns></returns>
    private async Task AddBooking()
    {
        BookingPostDTO tempBooking = new BookingPostDTO();
        tempBooking.UserId = UserId;
        tempBooking.SessionId = ClassId;
        tempBooking.CreatedAt = DateTime.Now;

        await bookingService.CreateBooking(tempBooking);
        navManager.NavigateTo("/viewbookings", true);
    }
    
    private async Task GetUsers()
    {
        userList = await userService.GetAllUsers();
    }

    private async Task GetClassSessions()
    {
        bookingList = await bookingService.GetAllBookings();
    }
}
