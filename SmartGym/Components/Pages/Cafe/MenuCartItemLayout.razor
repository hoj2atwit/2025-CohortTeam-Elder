
@using Components.UIClasses.Cafe;
<div class="flex justify-center border border-black py-3" style="width: 20vw;">
    <div>
        <h3 class="relative left-0 top-0 py-1">@cartItem.Item.Name</h3>
        <div class="flex items-center justify-center">
            <button class="aspect-square w-10 rounded-full border border-black p-5 text-xl font-bold" @onclick=increaseAmount>+</button>
            @* Input field for quantity of cart item. If quantity input is invalid then default to 0 as input *@
            <input type="number" style="text-align: center;" class="field-sizing-content w-auto min-w-0 border border-black" value=@cartItem.Amount @onchange="@((ChangeEventArgs e) => { try { cartItem.Amount = int.Parse(e.Value.ToString()); } catch (Exception ex) { e.Value = 0; cartItem.Amount = 0; } updateAmount(); })" />
            <button class="aspect-square w-10 rounded-full border border-black p-5 text-xl font-bold" @onclick=decreaseAmount>-</button>
        </div>
    </div>
    <h3 class="px-2 py-1">@cartItem.CurrentPriceString</h3>
</div>
@code {
    [Parameter]
    public CartModel.CartItemModel? cartItem { get; set; }
    [Parameter]
    public MenuCartLayout cartMain { get; set; }

    /// <summary>
    /// Increases the amount of cartItem by 1.
    /// </summary>
    async public void increaseAmount()
    {
        cartItem.increaseAmount();
        await cartMain.updateCart();
    }

    /// <summary>
    /// decreases the amount of a cartItem by 1. 
    /// If that were to decrease the amount to 0 or lower, removes the cartItem from the cart.
    /// </summary>
    async public void decreaseAmount()
    {
        if (cartItem.Amount - 1 <= 0)
        {
            cartMain.removeFromCart(cartItem.Item.ItemId);
        }
        else
        {
            cartItem.reduceAmount();
        }
        await cartMain.updateCart();

    }

    /// <summary>
    /// Updates the amount of the CartItem dependant on inputed amount.
    /// if cartItem is 0 or lower, removes the cartItem from the cart.
    /// </summary>
    async public void updateAmount()
    {
        if (cartItem.Amount <= 0)
        {
            cartMain.removeFromCart(cartItem.Item.ItemId);
        }
        else
        {
            cartItem.updatePrice();
        }
        await cartMain.updateCart();
    }

    
}
