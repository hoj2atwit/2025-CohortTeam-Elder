@page "/create-class"
@using SmartGym.Models
@using System.ComponentModel.DataAnnotations

<EditForm Model="@formData" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

 
        <h2 class="text-2xl font-bold p-5">Create New Class</h2>
        <div class="px-5 flex flex-col gap-5">
            <div class="flex items-start gap-4">
                <label for="name" class="w-32 text-gray-700 mb-2 pt-3">Class Name</label>
                <div class="flex-1">
                    <InputText id="name" class="w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="formData.Name" />
                    <ValidationMessage For="@(() => formData.Name)" class="text-red-500 text-sm mt-1" />
                </div>
            </div>
        
            <div class="flex items-start gap-4">
                <label for="schedule" class="w-32 text-gray-700 mb-2 pt-3">Schedule</label>
                <div class="flex-1">
                    <InputDate id="schedule" class="w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="formData.Schedule" />
                    <ValidationMessage For="@(() => formData.Schedule)" class="text-red-500 text-sm mt-1" />
                </div>
            </div>
        
            <div class="flex items-start gap-4">
                <label for="capacity" class="w-32 text-gray-700 mb-2 pt-3">Capacity</label>
                <div class="flex-1">
                    <InputNumber id="capacity" class="w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="formData.Capacity" />
                    <ValidationMessage For="@(() => formData.Capacity)" class="text-red-500 text-sm mt-1" />
                </div>
            </div>
        
            <div class="flex items-start gap-4">
                <label for="trainerId" class="w-32 text-gray-700 mb-2 pt-3">Trainer ID</label>
                <div class="flex-1">
                    <InputNumber id="trainerId" class="w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="formData.TrainerId" />
                    <ValidationMessage For="@(() => formData.TrainerId)" class="text-red-500 text-sm mt-1" />
                </div>
            </div>
        
            <div class="flex items-start gap-4">
                <label for="categoryId" class="w-32 text-gray-700 mb-2 pt-3">Category ID</label>
                <div class="flex-1">
                    <InputNumber id="categoryId" class="w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="formData.CategoryId" />
                    <ValidationMessage For="@(() => formData.CategoryId)" class="text-red-500 text-sm mt-1" />
                </div>
            </div>
        
            <button type="submit" class="btn btn-primary mt-5">
                Create Class
            </button>
        </div>

</EditForm>

@code {
    private ClassDTO formData = new();

    private void HandleValidSubmit()
    {
        Console.WriteLine($"Name: {formData.Name}, Schedule: {formData.Schedule}, Capacity: {formData.Capacity}");
        // Call API or trigger further logic
    }
}
