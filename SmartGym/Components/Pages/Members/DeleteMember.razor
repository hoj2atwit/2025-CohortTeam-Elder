@page "/deletemember/{id:int}"
@using SmartGym.Models
@using SmartGym.Services
@inject SmartGym.Services.IUserService service
@inject NavigationManager navManager

<PageTitle>Delete Member</PageTitle>

<div>
    <div>
        @if (user == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div>
                <h4>Delete Member</h4>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div>
                    <p>@user.FirstName</p>
                </div>
                <div>
                    <p>@user.LastName</p>
                </div>
                <div>
                    <p>@user.Email</p>
                </div>
                <div>
                    <p>@user.DateOfBirth.ToString("MM/dd/yyyy")</p>
                </div>
                <div>
                    <p>Plan</p>
                </div>
                <div>
                    <p>@user.Status</p>
                </div>
                <div>
                    <p>Are you sure you want to delete this member?</p>
                    <p>This member will be permanantly deleted.</p>
                    <input hidden asp-for="Id" />

                </div>
            </div>
            <button @onclick=DelMember class="">Delete</button>
        }
        <a href="/members">Cancel</a>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }
    private UserDto user { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Populate userList
        user = await service.GetUserById(id);
        StateHasChanged();
    }

    private async Task DelMember()
    {
        await service.DeleteUser(id);
        navManager.NavigateTo("/members");
    }
}
