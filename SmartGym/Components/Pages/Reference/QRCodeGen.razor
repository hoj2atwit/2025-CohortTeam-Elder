@page "/qrcode"
@using IronBarCode
@using SmartGym.Models
@using SmartGym.Services
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims;
@inject SmartGym.Services.IUserService service
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<PageTitle>QR Code Generator</PageTitle>

<div class="row">
    <div class="col">
        <button @onclick="QRCodeGenerator">[Generate QR Code]</button>
    </div>
    <div class="col">
        <!-- Button to trigger QR code generation -->
        <p style="font-size:20px"><b>Generated QR Code:</b></p>

        @((MarkupString)qrCode)
    </div>
</div>

@code {

    // Variable to hold the generated QR code HTML
    private string qrCode = "";

    private string text = "";

    private string? userName;
    private int id = 1;
    private List<string> defaultSvgs = new List<string> { "manager.svg", "staff.svg", "user.svg", "trainer.svg" };

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            userName = user.Identity.Name;
            id = int.Parse(user.FindFirst(ClaimTypes.NameIdentifier)?.Value);

        }

        await QRCodeGenerator();
    }

    // Method to generate QR code from user input
    private async Task QRCodeGenerator()
    {
        //UserDto userdto = await service.GetUserById(id);
        Random random = new Random();
        long first = random.NextInt64(5000000000, 1000000000000);
        long second = random.NextInt64(5000000000, 1000000000000);
        long third = random.NextInt64(5000000000, 1000000000000);
        text = $"{navigationManager.BaseUri}QRCheckin/%{first}%{userName}${second}${id}&{third}&/";
        //Set Random ints to User DB to compare to for checkin and login.
        // Create a QR code from the input text
        try {

            if (string.IsNullOrEmpty(text))
            {
                throw new ArgumentException("Text can't be empty");
            }

            GeneratedBarcode myQRCode = QRCodeWriter.CreateQrCode(text);

            // Convert the generated QR code to HTML tag
            qrCode = Convert.ToString(myQRCode.ToHtmlTag());
        } catch (Exception e) {
            Console.WriteLine($"Error: {e.Message}");
        }
        StateHasChanged();
    }
}

