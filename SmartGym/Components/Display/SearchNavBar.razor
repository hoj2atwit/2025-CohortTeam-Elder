@attribute [StreamRendering]
<nav class="flex items-center justify-between px-6 py-4">
    <!-- Logo -->
    <div class="ml-6 flex items-center gap-2">
        <img src="lib/images/logo.svg" alt="LOGO" class="h-8 w-8" />
        <span class="text-3xl font-bold text-gray-800 font-funnel">@Title</span>
    </div>

    <!-- Search box -->
    @if (isSearchable) {
        <div class="mx-8 flex-1">
            <input type="text" placeholder="Search..." class="w-full max-w-xs rounded-full border border-[#dbe0e6] px-4 py-2 focus:outline-none focus:ring-2 focus:ring-gray-300" @onchange="@((ChangeEventArgs e)=>{ string s = "" + e.Value; OnChangeEventCallBack.InvokeAsync(s);})" />
        </div>
    }

    <!-- Icons -->
    <div class="flex items-center gap-6">
        <!-- Notification Icon (Heroicons Bell) -->
        <NotificationsModal />
        <!-- Profile Icon (Heroicons User) -->
        <button>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 cursor-pointer text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.121 17.804A9.003 9.003 0 0112 15c2.21 0 4.21.805 5.879 2.146M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
        </button>
    </div>
</nav>

@code
{
    [Parameter]
    public EventCallback<string> OnChangeEventCallBack { get; set; }
    [Parameter]
    public string Title { get; set; } = "";
    [Parameter]
    public bool isSearchable { get; set; }

    public Task updateView()
    {
        StateHasChanged();
        return Task.CompletedTask;
    }
}
